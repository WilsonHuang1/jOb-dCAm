%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Left Camera calibration and distortion parameters (OpenCV)
# From your ACTUAL 1280x800 extraction: fx=616.888245, cx=643.5, cy=401.5
Camera.fx: 616.888245
Camera.fy: 616.888245
Camera.cx: 643.500000
Camera.cy: 401.500000

# Left camera distortion coefficients (REQUIRED for stereo-inertial)
Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0
Camera.k3: 0.0

# Right Camera calibration and distortion parameters (OpenCV)
Camera2.fx: 616.888245
Camera2.fy: 616.888245
Camera2.cx: 643.500000
Camera2.cy: 401.500000

# Right camera distortion coefficients (REQUIRED)
Camera2.k1: 0.0
Camera2.k2: 0.0
Camera2.p1: 0.0
Camera2.p2: 0.0
Camera2.k3: 0.0
    
# Transformation matrix from right camera to left camera
# From your extraction: Translation Vector [-50.020599, 0.000000, 0.000000] mm
# Baseline: 50.020599 mm = 0.050021 m
Tlr: !!opencv-matrix
  rows: 3
  cols: 4
  dt: f
  data: [ 1.0, 0.0, 0.0, -0.050021,
          0.0, 1.0, 0.0, 0.0,
          0.0, 0.0, 1.0, 0.0]

# Lapping area between images (for stereo-inertial)
Camera.lappingBegin: 0
Camera.lappingEnd: 1280

Camera2.lappingBegin: 0
Camera2.lappingEnd: 1280

# Camera resolution from your ACTUAL extraction
Camera.width: 1280
Camera.height: 800

# Camera frames per second 
Camera.fps: 30.0

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 0

# Close/Far threshold. Baseline times.
ThDepth: 35.0

# Stereo baseline times fx from your ACTUAL extraction
# Camera.bf = baseline * fx = 0.050021 * 616.888245 = 30.866
Camera.bf: 30.866

# Transformation from body-frame (imu) to left camera
# From your extraction: [-0.246000, -0.065000, 16.948000] mm
# For TBC1 (IMU to camera), we need the inverse: [0.246, 0.065, -16.948] mm
Tbc: !!opencv-matrix
  rows: 4
  cols: 4
  dt: f
  data: [1.0, 0.0, 0.0, 0.000246,
         0.0, 1.0, 0.0, 0.000065,
         0.0, 0.0, 1.0, -0.016948,
         0.0, 0.0, 0.0, 1.0]

# IMU noise characteristics from your extraction (adjusted for 8Hz rate from program output)
IMU.NoiseGyro: 0.00032   # rad/s/sqrt(Hz) - adjusted for 8Hz rate  
IMU.NoiseAcc: 0.0056     # m/s^2/sqrt(Hz) - adjusted for 8Hz rate
IMU.GyroWalk: 0.000004   # rad/s^2/sqrt(Hz) - adjusted for 8Hz rate
IMU.AccWalk: 0.00016     # m/s^3/sqrt(Hz) - adjusted for 8Hz rate
IMU.Frequency: 200         # Hz

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1.0
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2.0
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3.0
Viewer.ViewpointX: 0.0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500.0